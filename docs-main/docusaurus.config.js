// @ts-check
// Note: type annotations allow type checking and IDEs autocompletion

const lightCodeTheme = require("prism-react-renderer/themes/github");
const darkCodeTheme = require("prism-react-renderer/themes/dracula");

const baseUrl = process.env.BASE_URL ?? "/";

/** @type {import('@docusaurus/types').Config} */
const createConfig = async () => {
    const mdxMermaid = await import("mdx-mermaid");
    return {
        title: "OpenTalk",
        tagline: "Documentation",
        favicon: "img/favicon.ico",

        url: "https://opentalk.eu",
        baseUrl: baseUrl,

        onBrokenLinks: "warn", // TODO: Re-enable me when all broken markdown links are fixed
        onBrokenMarkdownLinks: "warn",

        i18n: {
            defaultLocale: 'en',
            locales: ['en', 'de'],
            path: 'i18n',
            localeConfigs: {
                de: {
                    path: 'de',
                    htmlLang: 'de-DE'
                }
            }
        },

        presets: [
            [
                "redocusaurus",
                {
                    specs: [
                        {
                            id: 'controller-rest',
                            route: "/developer/controller/rest-api/",
                            spec: "openapi/controller.yaml",
                        }
                    ],
                    theme: {
                        primaryColor: "#1890ff",
                        redocOptions: {hideDownloadButton: false},
                    },
                },
            ],
        ],

        themes: [],

        plugins: [
            [
                '@docusaurus/theme-classic',
                {
                    customCss: require.resolve('./src/css/custom.css'),
                }
            ],
            [
                '@docusaurus/plugin-content-pages',
                {
                    path: 'src/pages',
                    routeBasePath: '/',
                }
            ],
            [
                '@docusaurus/plugin-content-docs',
                {
                    id: 'user',
                    routeBasePath: 'user',
                    path: 'user-docs',

                    sidebarPath: require.resolve('./sidebars.js'),
                    remarkPlugins: [mdxMermaid.default],
                }
            ],
            [
                '@docusaurus/plugin-content-docs',
                {
                    id: 'admin',
                    routeBasePath: 'admin',
                    path: 'admin-docs',
                    sidebarPath: require.resolve('./sidebars.js'),
                    remarkPlugins: [mdxMermaid.default],
                }
            ],
            [
                '@docusaurus/plugin-content-docs',
                {
                    id: 'developer',
                    routeBasePath: 'developer',
                    path: 'developer-docs',
                    sidebarPath: require.resolve('./sidebars.js'),
                    remarkPlugins: [mdxMermaid.default],
                }
            ],
            [
                '@docusaurus/plugin-sitemap',
                {
                    changefreq: 'weekly',
                    priority: 0.5,
                    ignorePatterns: ['/tags/**'],
                    filename: 'sitemap.xml',
                }
            ],
            [
                '@cmfcmf/docusaurus-search-local',
                {
                    indexPages: true,
                    indexBlog: false,
                }
            ]
        ],
        themeConfig:
        /** @type {import('@docusaurus/preset-classic').ThemeConfig} */
            ({
                navbar: {
                    title: "OpenTalk Docs",
                    logo: {
                        alt: "OpenTalk Logo",
                        src: "img/logo.svg",
                    },
                    items: [
                        {
                            type: 'docSidebar',
                            sidebarId: 'autogeneratedSidebar',
                            position: 'left',
                            label: 'User',
                            docsPluginId: 'user',
                        },
                        {
                            type: 'docSidebar',
                            sidebarId: 'autogeneratedSidebar',
                            position: 'left',
                            label: 'Admin',
                            docsPluginId: 'admin',
                        },
                        {
                            type: 'docSidebar',
                            sidebarId: 'autogeneratedSidebar',
                            position: 'left',
                            label: 'Developer',
                            docsPluginId: 'developer',
                        },

                        // Adding a version dropdown for every docs-instance (user, admin and developer)
                        // See https://github.com/facebook/docusaurus/issues/4389#issuecomment-1500319377
                        {
                            type: 'docsVersionDropdown',
                            position: 'right',
                            docsPluginId: 'user',
                        },
                        {
                            type: 'docsVersionDropdown',
                            position: 'right',
                            docsPluginId: 'admin',
                        },
                        {
                            type: 'docsVersionDropdown',
                            position: 'right',
                            docsPluginId: 'developer',
                        },

                        // This component is being swizzled in src/theme/NavbarItem/LocaleDropdownNavbarItem to only show it
                        // when on looking at user docs
                        {
                            type: 'localeDropdown',
                            position: 'right',
                        },
                    ],
                },
                footer: {
                    style: "dark",
                    links: [
                        {
                            title: "Docs",
                            items: [
                                {
                                    label: 'User',
                                    to: '/user',
                                },
                                {
                                    label: 'Admin',
                                    to: '/admin',
                                },
                                {
                                    label: 'Developer',
                                    to: '/developer',
                                },
                            ],
                        },
                        {
                            title: "More",
                            items: [
                                {
                                    label: 'OpenTalk',
                                    href: 'https://opentalk.eu/',
                                },
                                {
                                    label: 'OpenCoDE',
                                    href: 'https://gitlab.opencode.de/opentalk/',
                                },
                            ],
                        },
                    ],
                    copyright: `Copyright Â© ${new Date().getFullYear()} OpenTalk GmbH. Built with Docusaurus.`,
                },
                prism: {
                    theme: lightCodeTheme,
                    darkTheme: darkCodeTheme,
                },
            }),
    };
};

module.exports = createConfig;
